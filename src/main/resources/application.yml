# application.yml
spring:
  sleuth:
    integration:
      enabled: false
    scheduled:
      enabled: false
    sampler:
      percentage: 1.0
    stream:
      enabled: true
  datasource:
    url: jdbc:mysql://localhost:3306/issue_service?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: choerodon
    password: 123456
#  kafka:
#    bootstrap-servers: localhost:9092
#    producer:
#      value-serializer: org.apache.kafka.common.serialization.ByteArraySerializer
#    consumer:
#      group-id: statemachine-service-consumer
#      auto-offset-reset: latest
#    listener:
#      ack-mode: record
#      poll-timeout: 3000
  cloud:
    bus:
      enabled: true
    stream:
      kafka:
        binder:
          brokers: 127.0.0.1:9092
          zkNodes: 127.0.0.1:2181
choerodon:
  devops:
    message: true
eureka:
  instance:
    preferIpAddress: true
    leaseRenewalIntervalInSeconds: 10
    leaseExpirationDurationInSeconds: 30
    metadata-map:
      VERSION: v1
  client:
    serviceUrl:
      defaultZone: http://localhost:8000/eureka/
    registryFetchIntervalSeconds: 10
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 15000
  stream:
    queue:
      enabled: false
ribbon:
  ReadTimeout: 5000
  ConnectTimeout: 5000
mybatis:
  mapperLocations: classpath*:/mapper/*.xml
  configuration: # 数据库下划线转驼峰配置
    mapUnderscoreToCamelCase: true
services:
  attachment:
    url: example.com
logging:
  level:
    io.choerodon.issue: debug
#请求处理的超时时间
ribbon.ReadTimeout: 120000
#请求连接的超时时间
ribbon.ConnectTimeout: 30000

#feign.hystrix.enabled: true
#hystrix 熔断机制
#hystrix:
#  shareSecurityContext: true
#  command:
#    default:
#      circuitBreaker:
#        sleepWindowInMilliseconds: 100000
#        forceClosed: true
#      execution:
#        isolation:
#          thread:
#            timeoutInMilliseconds: 600000
